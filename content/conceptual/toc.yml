items:
- name: Conceptual documentation
  topicUid: conceptual
  items:
   
    - name: Release notes
      topicUid: release-notes
      items:

        - name: Requirements
          topicUid: requirements
        - name: Metalama 2024.2 
          topicUid: release-notes-2024.2            
        - name: Metalama 2024.1
          topicUid: release-notes-2024.1      
        - name: Metalama 2024.0
          topicUid: release-notes-2024.0      
        - name: Metalama 2023.4
          topicUid: release-notes-2023.4
        - name: Metalama 2023.3
          topicUid: release-notes-2023.3
        - name: Metalama 2023.2
          topicUid: release-notes-2023.2
        - name: Metalama 2023.1
          topicUid: release-notes-2023.1
        - name: Metalama 2023.0
          topicUid: release-notes-2023.0

    - name: Installing Metalama
      topicUid: installing
      items:
        - name: Installing the Visual Studio tooling
          topicUid:  install-vsx
        - name: Installing Metalama command line tool
          topicUid: dotnet-tool
        - name: Registering a license
          topicUid: register-license    



    - name: Using Metalama 
      topicUid: using-metalama
      items:
        - name: Getting aspects   
          topicUid: getting-aspects
        - name: Adding aspects to code
          topicUid: quickstart-adding-aspects
        - name: Understanding your code with aspects
          topicUid: understanding-your-code-with-aspects
        - name: Debugging aspect oriented code 
          topicUid: debugging-aspect-oriented-code
        - name: Applying live templates
          topicUid:  applying-live-templates
        - name: Adding many aspects at once
          topicUid: fabrics-adding-aspects
        - name: More about fabrics
          topicUid: fabrics
        - name: Configuring aspect libraries
          topicUid: fabrics-configuration
        - name: Amending many projects at once
          topicUid: fabrics-many-projects



    - name: Pattern Libraries
      href: ../patterns/toc.yml

    - name: Creating aspects
      topicUid: aspects
      items:
        - name: Creating simple aspects
          topicUid: simple-aspects
          items:
          - name: Overriding methods
            topicUid: simple-override-method
          - name: Overriding fields or properties
            topicUid: simple-override-property
          - name: Validating parameters, fields and properties
            topicUid: simple-contracts
      
        - name: Writing T# templates
          topicUid: templates
          items:
            - name: Overview
              topicUid: template-overview
            - name: Writing compile-time code
              topicUid: template-compile-time
            - name:  Generating run-time code
              topicUid: template-dynamic-code
            - name: Template parameters and type parameters
              topicUid: template-parameters
            - name: Calling auxiliary templates
              topicUid: auxiliary-templates
            - name: Generating System.Reflection objects
              topicUid: reflection

        - name: Understanding the framework design
          topicUid: aspect-design

        - name: Advising code
          topicUid: advising-code
          items:
          - name: Concepts
            topicUid: advising-concepts
          - name: Overriding methods
            topicUid: overriding-methods
          - name: Overriding fields or properties
            topicUid: overriding-fields-or-properties
          - name: Overriding events
            topicUid: overriding-events          
          - name: Validating parameters, fields and properties
            topicUid: contracts
          - name: Introducing members
            topicUid: introducing-members
          - name: Implementing interfaces
            topicUid: implementing-interfaces
          - name: Introducing types
            topicUid: introducing-types
          - name: Adding initializers
            topicUid: initializers
          - name: Introducing constructor parameters
            topicUid: introducing-constructor-parameters
          - name: Overriding constructors
            topicUid: overriding-constructors
          - name: Adding and removing attributes
            topicUid: adding-attributes
          - name: Sharing state with advice
            topicUid: sharing-state-with-advice

        - name: Reporting and suppressing diagnostics
          topicUid: diagnostics
        - name: Injecting dependencies into aspects
          topicUid: dependency-injection
        - name: Defining aspect eligibility
          topicUid: eligibility
        - name: Building IDE interactions
          topicUid: building-ide-interactions
          items:
          - name: Exposing an aspect as a live template
            topicUid: live-template
          - name: Offering code fixes & refactorings
            topicUid: code-fixes
        - name: Adding child aspects
          topicUid: child-aspects
        - name: Applying aspects to derived types
          topicUid: aspect-inheritance
        - name: Validating code
          topicUid: aspect-validating
        - name: Ordering aspects
          topicUid: ordering-aspects
        - name: Making aspects configurable
          topicUid: aspect-configuration
          items:
            - name: Exposing a configuration API
              topicUid: exposing-options
            - name: Reading MSBuild properties
              topicUid: reading-msbuild-properties
            - name: Customizing the option merge process
              topicUid: configuration-custom-merge
            - name: Configuration before v2023.4
              topicUid: exposing-configuration-before-2023-4

        - name: Testing and debugging aspects
          topicUid: testing
          items:
          - name: Unit-testing code generation and error reporting
            topicUid: aspect-testing        
          - name: Unit-testing run-time behavior
            topicUid: run-time-testing
          - name: Unit-testing compile-time code
            topicUid: compile-time-testing
          - name: Debugging aspects
            topicUid: debugging-aspects            

        - name: Advising a single type with a fabric
          topicUid: fabrics-advising

        - name: Decoupling attributes from their implementation
          topicUid: decoupling-aspects-from-attributes

        - name: Distributing projects that use aspects
          topicUid: distributing
          
        - name: Extending Metalama
          topicUid: sdk
          items:
            - name: Aspect weavers
              topicUid: aspect-weavers
            - name: Using the Roslyn API from aspects
              topicUid: roslyn-api
            - name: Custom metrics
              topicUid: custom-metrics
            
        - name: Under the hood
          topicUid: implementation
          items:
            - name: NuGet packages
              topicUid: packages
            - name: Aspect serialization
              topicUid: aspect-serialization
            - name: Pipeline
              topicUid: pipeline
            - name: Aspect composition
              topicUid: aspect-composition
            - name: Execution order of fabrics
              topicUid: fabrics-execution-order              

    - name: Verifying architecture
      topicUid: validation
      items:  
        - name: Verifying usage
          topicUid: validating-usage
        - name: Enforcing naming conventions
          topicUid: naming-conventions
        - name: Restricting interface implementation
          topicUid: internal-only-implement
        - name: Marking an API as experimental
          topicUid: experimental
        - name: Extending the validation API
          topicUid: validation-extending

    - name: Configuring and troubleshooting
      topicUid: configuration 
      items: 
        - name: MSBuild properties and items
          topicUid: msbuild-properties
        - name: Enabling logging
          topicUid: creating-logs
        - name: Capturing crash reports
          topicUid: process-dump
        - name: Capturing performance data
          topicUid: profiling
        - name: Troubleshooting a build server
          topicUid: troubleshooting-unattended-build
        - name: Telemetry
          topicUid: telemetry
        - name: Inspecting projects using LINQPad
          topicUid: linqpad

    - name: Migrating from PostSharp
      topicUid: migration
      items:
        - name: Migrating your custom aspects to Metalama
          topicUid: migrating-aspects
        - name: Why migrate
          topicUid: benefits-over-postsharp
        - name: When migrate
          topicUid: when-migrate
        - name: Feature status
          topicUid: migration-feature-status
          items:
            - name: NotifyPropertyChanged
              topicUid: migrating-inpc
        - name: Architectural differences from PostSharp
          topicUid: differences-from-postsharp
        - name: Migrating attribute multicasting
          topicUid: migrating-multicasting
        - name: Migrating configuraiton
          topicUid: migrating-configuration


    - name: Divorcing from Metalama
      topicUid: divorcing